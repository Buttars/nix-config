# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ inputs, config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/profiles/qemu-guest.nix")
      inputs.disko.nixosModules.disko
      (../common/disks/btrfs-disk.nix)
      {
        _module.args = {
          withSwap = true;
          swapSize = 8;
        };
      }
    ];

  boot.initrd.availableKernelModules = [ "ata_piix" "uhci_hcd" "virtio_pci" "virtio_scsi" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;


  # fileSystems."/" =
  #   {
  #     device = "/dev/disk/by-uuid/1652a88f-6ea2-49eb-afe1-d731ebe091f3";
  #     fsType = "btrfs";
  #     options = [ "subvol=@root" ];
  #   };
  #
  # fileSystems."/nix" =
  #   {
  #     device = "/dev/disk/by-uuid/1652a88f-6ea2-49eb-afe1-d731ebe091f3";
  #     fsType = "btrfs";
  #     options = [ "subvol=@nix" ];
  #   };
  #
  # fileSystems."/.swapvol" =
  #   {
  #     device = "/dev/disk/by-uuid/1652a88f-6ea2-49eb-afe1-d731ebe091f3";
  #     fsType = "btrfs";
  #     options = [ "subvol=@swap" ];
  #   };
  #
  # fileSystems."/boot" =
  #   {
  #     device = "/dev/disk/by-uuid/47F0-6183";
  #     fsType = "vfat";
  #     options = [ "fmask=0022" "dmask=0022" ];
  #   };

  # swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens18.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
